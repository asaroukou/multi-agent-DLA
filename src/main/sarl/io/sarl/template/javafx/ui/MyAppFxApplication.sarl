package io.sarl.template.javafx.ui

import io.sarl.javafx.FxApplication
import java.util.ResourceBundle
import javafx.fxml.FXMLLoader
import javafx.fxml.JavaFXBuilderFactory
import javafx.scene.Parent
import javafx.scene.Scene
import javafx.stage.Stage
import javafx.scene.layout.Pane
import javafx.scene.layout.Region
import javafx.scene.layout.StackPane
import javafx.scene.shape.Rectangle
import javafx.scene.paint.Color
import javafx.scene.layout.Background
import javafx.scene.layout.BackgroundFill
import javafx.application.Application
import javafx.scene.control.SplitPane
import javafx.scene.layout.VBox
import javafx.scene.control.Label

/** Definition of the JavaFX application.
 */


class MyAppFxApplication extends FxApplication {
	
	def putGridTile(x: int, y: int) : int {
//		var tile: Tile = this.grid.get(x, y)
		x + y
	}

	def doApplicationStart(stage : Stage) : FXMLLoader {
		// Retrieve the property bundle that contains the UI texts.
		var simpleName = typeof(MyAppFxApplication).simpleName
		val bundle = ResourceBundle::getBundle(typeof(MyAppFxApplication).package.name.replaceAll("\\.", "/") + "/"
			+ simpleName)

		// Retrieve the JavaFX UI definition file
		var location = class.getResource(simpleName + ".fxml")
		
		// Load the JavaFX UI definition
		var loader = new FXMLLoader
		loader.location = location
		loader.builderFactory = new JavaFXBuilderFactory
		loader.resources = bundle
		var root : Parent = loader.load(location.openStream)

		// Create the application UI
		var splitPane : SplitPane = new SplitPane()
		var leftControl : VBox = new VBox(new Label("Left Control"))
		var midControl : VBox = new VBox(new Label("Mid Control"))
		var rightControl : VBox = new VBox(new Label("Right Control"))
		var scene = new Scene(root)
		//		scene.stylesheets.add(class.getResource("ViewerController.css").toExternalForm)
		stage.title = bundle.getString("TITLE")
		stage.scene = scene
		stage.centerOnScreen
		return loader
	}
	
}

